# -*- coding: utf-8 -*-

"""
Copyright Â© 2019-present Lenovo

This file is licensed under both the BSD-3 license for individual/non-commercial use and
EPL-1.0 license for commercial use. Full text of both licenses can be found in
COPYING.BSD and COPYING.EPL files.
"""
# Generated by Django 1.11.10 on 2018-09-18 08:56
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cluster', '0001_antilles_1_0_0'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobid', models.CharField(blank=True, db_index=True, default=b'', max_length=32)),
                ('jobname', models.CharField(blank=True, default=b'', max_length=128)),
                ('queue', models.CharField(blank=True, default=b'', max_length=128)),
                ('qtime', models.IntegerField(blank=True, db_index=True, default=0)),
                ('starttime', models.IntegerField(blank=True, default=0)),
                ('endtime', models.IntegerField(blank=True, default=0)),
                ('submiter', models.CharField(blank=True, default=b'', max_length=32)),
                ('submit_args', models.CharField(blank=True, default=b'', max_length=260)),
                ('jobstatus', models.CharField(blank=True, default=b'', max_length=12)),
                ('walltime', models.CharField(blank=True, default=b'', max_length=24)),
                ('nodescount', models.IntegerField(blank=True, default=0)),
                ('cpuscount', models.IntegerField(blank=True, default=0)),
                ('priority', models.CharField(blank=True, default=b'', max_length=12)),
                ('exechosts', models.CharField(blank=True, default=b'', max_length=512)),
                ('type', models.CharField(blank=True, default=b'', max_length=24)),
                ('jobfilename', models.CharField(blank=True, default=b'', max_length=260)),
                ('workingdir', models.CharField(blank=True, default=b'', max_length=260)),
                ('mail', models.CharField(blank=True, default=b'', max_length=260)),
                ('mailtrigger', models.CharField(blank=True, default=b'', max_length=12)),
                ('mpi_prog', models.CharField(blank=True, default=b'', max_length=260)),
                ('mpi_prog_arguments', models.CharField(blank=True, default=b'', max_length=64)),
                ('pnodescount', models.IntegerField(blank=True, default=0)),
                ('ppn', models.IntegerField(blank=True, default=0)),
                ('pmem', models.IntegerField(blank=True, default=0)),
                ('status', models.CharField(blank=True, default=b'', max_length=24)),
                ('isdeleted', models.BooleanField(default=False)),
                ('operatestatus', models.CharField(blank=True, default=b'', max_length=24)),
                ('aioperatestatus', models.CharField(blank=True, default=b'', max_length=24)),
                ('charge', models.IntegerField(blank=True, default=0)),
                ('wallduration', models.IntegerField(blank=True, default=0)),
                ('billgroup', models.CharField(blank=True, default=b'', max_length=32)),
                ('workspace', models.CharField(blank=True, default=b'', max_length=260)),
                ('json_body', models.TextField(blank=True, default=b'')),
                ('gpuscount', models.IntegerField(blank=True, default=0)),
                ('gpucharge', models.IntegerField(blank=True, default=0)),
                ('gpusexechosts', models.CharField(blank=True, default=b'', max_length=512)),
                ('resumejobid', models.CharField(blank=True, default=b'', max_length=32)),
                ('errfile', models.TextField(blank=True, default=b'')),
                ('outfile', models.TextField(blank=True, default=b'')),
            ],
        ),
        migrations.CreateModel(
            name='JobConsole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_run_id', models.CharField(max_length=32)),
                ('console_server', models.CharField(default=b'', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='JobTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('logo', models.TextField()),
                ('desc', models.CharField(default=b'', max_length=500)),
                ('parameters_json', models.TextField()),
                ('template_file', models.TextField()),
                ('type', models.CharField(default=b'', max_length=32)),
                ('category', models.CharField(default=b'', max_length=100)),
                ('user_id', models.IntegerField()),
                ('scheduler', models.CharField(default=b'', max_length=32)),
                ('feature_code', models.CharField(default=b'', max_length=32)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RunningJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('core_num', models.IntegerField()),
                ('gpu_num', models.IntegerField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scheduler.Job')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cluster.Node')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='jobtemplate',
            unique_together=set([('name', 'user_id')]),
        ),
    ]
